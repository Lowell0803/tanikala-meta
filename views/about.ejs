<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>TANIKALA Voting System</title>

    <link rel="stylesheet" type="text/css" href="css/index.css" />
    <link rel="stylesheet" type="text/css" href="css/about.css" />

    <!-- add mo to zari -->
    <link rel="stylesheet" type="text/css" href="/components/popup-vote.css" />
    <!-- add mo to zari -->

    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Poppins:wght@400;700&display=swap" rel="stylesheet" />
  </head>
  <body>
    <header class="header">
      <div class="header-logo">
        <img src="img/logo_tanikala.png" alt="Tanikala Voting System" />
      </div>
      <nav class="header-nav">
        <ul class="header-nav-content">
          <li><a href="/">Home</a></li>
          <li><a href="/home-candidates">Candidates</a></li>
          <li><a href="/about" id="active-link">About</a></li>
          <li><a href="/contact">Contact</a></li>
        </ul>
      </nav>
      <div class="header-bottom-line"></div>
    </header>

    <div class="content">
    
      <!-- add mo to zari -->



      <div class="content-title">
        <h3>BLOCKCHAIN-BASED VOTING SYSTEM FOR THE STUDENT GOVERNMENT ELECTIONS AT BULACAN STATE UNIVERSITY</h3>
      </div>

      <div class="content-main">
        <div class="content-mobile">
          <div class="content-main-left">
            <img src="img/logo_bulsu.png" alt="BulSU Logo" class="logo-opacity" /> <br />
            <p class="montserrat" id="be-heard">Be Heard! Your Vote is Your Power!</p>
          </div>

          <div class="content-main-right">
            <img src="img/logo_bulsu_ucse.png" alt="BulSU UCSE Logo" class="logo-opacity" /><br />
            <p class="montserrat" id="vote-now">Vote Now for the Student Government Elections!</p>
          </div>
        </div>
        <div class="main-first">
          <img src="img/logo_bulsu.png" class="main-first-logo no-mobile" alt="BulSU Logo" /> 
          <div class="first-text">
            <h2 class="montserrat h1-big about">About Us</h2>
            <p class="montserrat light get-to-know">Get to know more about the TANIKALA Voting System.</p>
          </div>
          <img src="img/logo_bulsu_ucse.png" class="main-first-logo no-mobile" alt="BulSU UCSE Logo" />
        </div>

        <div class="main-container">
          <div class="main-buttons">
            <div class="buttons">
              <div class="mini-logo-container">
                <img src="img/committee.png" class="mini-logo" id="button-committee" alt="Student Government" />
              </div>
              <div class="text-container">
                <h6><a href="#bulsu" class="montserrat">BulSU and its Student Government Elections</a></h6>
              </div>
            </div>
            <div class="buttons">
              <div class="mini-logo-container">
                <img src="img/logo_tanikala_notext.png" class="mini-logo" id="button-tanikala" alt="TANIKALA Logo" />
              </div>
              <div class="text-container">
                <h6><a href="#tanikala" class="montserrat">TANIKALA Voting System</a></h6>
              </div>
            </div>
            <div class="buttons">
              <div class="mini-logo-container">
                <img src="img/developer.png" class="mini-logo" alt="Developer Logo" />
              </div>
              <div class="text-container">
                <h6><a href="#developer" class="montserrat">Developers</a></h6>
              </div>
            </div>
          </div>
          <!-- <br />
          <br />
          <br /> -->
          <div class="about-text">
            <h2 class="montserrat" id="bulsu">BulSU and its Student Government Elections</h2>
            <br />
            <p>
              Bulacan State University is a premier institution that values quality education and the growth of its students. Every year, the university holds student government elections managed by the University Commission on Student Elections (UCSE). These elections give students the chance to
              vote for their leaders in the Supreme Student Government (SSG) and Local Student Government (LSG), ensuring every student’s voice is heard. <br />
              <br />
              The SSG represents all students across the university, while the LSG focuses on the needs of students in specific colleges. This setup allows student concerns to be addressed effectively. <br />
              <br />
              These yearly elections highlight the importance of student involvement, promoting leadership, accountability, and teamwork. They also give future student leaders a platform to share ideas, start new programs, and make positive changes for the university community. <br />
            </p>
            <br />
            <br />

            <h2 class="montserrat" id="tanikala">Tanikala Voting System</h2>

            <br />
            <div>
              <h3 class="light-yellow">What is the TANIKALA Voting System?</h3>
            </div>
            <br />
            <p>The TANIKALA Voting System is a secure, reliable, and transparent blockchain-based platform designed specifically for student government elections at Bulacan State University. <br /></p>
            <br />
            <br />
            <h3 class="light-yellow">What is Blockchain?</h3>
            <br />
            <p>
              Blockchain is a secure and transparent digital record that stores information in a way that cannot be changed or deleted. Unlike traditional systems that rely on a central authority, blockchain uses multiple computers working together to verify and store data, ensuring accuracy and
              trust. The trust comes from the fact that no single individual or organization controls the data. Instead, it is distributed across a network of computers, where each one verifies the information to ensure consistency, thereby storing it accurately. If any discrepancies are detected,
              the operation is rejected by the network, ensuring the integrity of the system.
              <br />
              <br />
              In the context of voting systems, blockchain ensures that:
            </p>

            <br />
            <ol>
              <li>Every vote is permanently recorded, making it impossible to change or delete.</li>
              <br />
              <li>Votes remain completely anonymous—no one, not even administrators, can trace a vote back to the voter.</li>
              <br />

              <li>Election results are accurate, transparent, and verifiable, ensuring trust in the entire voting process.</li>
            </ol>
            <br />
            <br />

            <h3 class="light-yellow">How Does TANIKALA Ensure Trust Among Its Voters?</h3>
            <br />
            <ul>
              <li><span class="highlight">Security:</span> Protects voter privacy by making all votes anonymous and untraceable.</li>
              <br />
              <li><span class="highlight">Reliability:</span> Ensures accurate vote recording and secure storage, preventing tampering, deletion, or unauthorized changes.</li>
              <br />

              <li><span class="highlight">Transparency:</span> Allows voters to verify their votes using transaction receipts, enabling independent validation of election integrity while preserving privacy.</li>
              <br />
            </ul>

            <p>These core features—security, reliability, and transparency—are among the most important aspects of any voting system and are made possible in the TANIKALA Voting System through the use of blockchain technology.</p>
            <br />

            <br />
            <h2 class="montserrat" id="developer">The Team Behind TANIKALA</h2>
            <br />

            <div class="container-picture-holder">

              <br />
              <div class="picture-holder">
                <img src="img/aquino.jpg" alt="Zarina's" /> <br />
                <br />
                <h4 class="collaborator">Yvan Lowell T. Aquino</h4>
                <br />
                <hr />
                <br />
                <p class="role">Full-Stack Developer</p>
              </div>

              <div class="picture-holder" id="leader">
                <img src="img/dungo.jpeg" alt="Zarina B. Dungo" id="leader-img" /> <br />
                <br />
                <h4 class="leader">Zarina B. Dungo</h4>
                <br />
                <hr />
                <br />
                <div class="center">
                  <p class="role">Project Manager and Front-end Developer</p>
                </div>
              </div>

            </div>
            <br />
            <h3 class="group">Y-Z</h3>
            <br />
            <p>The front-end was designed and coded by Ms. Zarina B. Dungo and the back-end was developed by Mr. Yvan Lowell T. Aquino.</p>
            <br />
            <br />
          </div>
        </div>
      </div>
    </div>

    

    <!-- <footer class="footer">
      <div class="footer-left">
        <img src="img/calendar.png" class="footer-img" />
        <p id="datetime" data-date="<%= electionConfig.fakeCurrentDate %>"></p>
      </div>
      <div class="footer-center">
        <img src="img/copyright.png" class="footer-img" id="copyright-img" />
        <p>2025 - Fourmula 1</p>
      </div>
      <div class="footer-right">
        <img src="img/log-in.png" class="footer-img" id="admin-img" />
        <p>Admin? Log in&nbsp;</p>
        <a href="/admin-login"> here.</a>
      </div>
    </footer> -->
    <!-- <script src="js/index.js"></script>
    <script>
      function formatDate(isoString) {
        const date = new Date(isoString);
        const options = {
          month: "long",
          day: "2-digit",
          year: "numeric",
          hour: "2-digit",
          minute: "2-digit",
          hour12: true,
        };
        return date.toLocaleString("en-US", options).toUpperCase();
      }

      function updateDateTime() {
        const datetimeElement = document.getElementById("datetime");
        if (!datetimeElement) return;

        // Get the initial time from the data attribute
        let currentTime = new Date(datetimeElement.getAttribute("data-date"));

        function update() {
          datetimeElement.textContent = formatDate(currentTime);
          currentTime.setMinutes(currentTime.getMinutes() + 1); // Increment by 1 minute
        }

        update(); // Set initial formatted date
        setInterval(update, 60000); // Update every minute (60000ms)
      }

      document.addEventListener("DOMContentLoaded", updateDateTime);
    </script> -->
    <script>
      // voting countdown
      // Use voting dates from server configuration.
      const votingStart = new Date("<%= electionConfig.votingStart %>").getTime();
      const votingEnd = new Date("<%= electionConfig.votingEnd %>").getTime();

      // Get fakeCurrentDate from EJS template if provided.
      // Use fakeCurrentDate if provided; otherwise use the real current time.
      const fakeCurrentDateStr = "<%= electionConfig.fakeCurrentDate ? electionConfig.fakeCurrentDate : '' %>";
      const baseNow = fakeCurrentDateStr ? new Date(fakeCurrentDateStr).getTime() : new Date().getTime();
      let elapsed = 0;
      function getCurrentTime() {
        return baseNow + elapsed;
      }

      // // Update the date range display.
      // const datePeriodElem = document.querySelector(".date-period");
      // datePeriodElem.textContent = new Date(votingStart).toLocaleDateString() + " - " + new Date(votingEnd).toLocaleDateString();

      // Update the date range display with the desired format (Month Day, Year).
      const datePeriodElem = document.querySelector(".date-period");
      const options = { year: "numeric", month: "long", day: "numeric" };
      datePeriodElem.textContent = new Date(votingStart).toLocaleDateString("en-US", options) + " - " + new Date(votingEnd).toLocaleDateString("en-US", options);

      // Grab elements by id.
      const electionPeriodElem = document.getElementById("election-period");
      // const countdownElem = document.getElementById("countdown");
      const daysElem = document.getElementById("days");
      const hoursElem = document.getElementById("hours");
      const minutesElem = document.getElementById("minutes");
      const secondsElem = document.getElementById("seconds");
      const timeLeftElem = document.getElementById("time-left");
      const prepareToCastYourVotesElem = document.getElementById("prepare-to-cast-your-votes");
      const prepareToCastYourVotesContainer = document.getElementById("prepare-to-container");
      const votingButton = document.getElementById("voting-button");

      function updatePhase() {
        const now = baseNow + elapsed;
        let distance = 0;
        if (now < votingStart) {
          electionPeriodElem.textContent = "Voting Period:";
          timeLeftElem.textContent = "Time Until Voting Begins";
          prepareToCastYourVotesElem.textContent = "Prepare to Cast Your Votes!";
          distance = votingStart - now;
          votingButton.style.display = "none";
        } else if (now >= votingStart && now <= votingEnd) {
          electionPeriodElem.textContent = "Voting Period:";
          timeLeftElem.textContent = "Left to Vote";
          distance = votingEnd - now;
          prepareToCastYourVotesContainer.textContent = "";
          votingButton.style.display = "block";
        } else {
          electionPeriodElem.textContent = "Voting Ended";
          timeLeftElem.textContent = "";
          distance = 0;
          votingButton.style.display = "none";
        }
        return distance;
      }

      const interval = setInterval(() => {
        const distance = updatePhase();
        // Simulate time progression if using fakeCurrentDate:
        if (fakeCurrentDateStr) {
          elapsed += 1000;
        }
        if (distance <= 0) {
          clearInterval(interval);
          // countdownElem.textContent = "00 00 00 00";
          daysElem.textContent = "00";
          hoursElem.textContent = "00";
          minutesElem.textContent = "00";
          secondsElem.textContent = "00";
        } else {
          const days = Math.floor(distance / (1000 * 60 * 60 * 24));
          const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
          const seconds = Math.floor((distance % (1000 * 60)) / 1000);

          // countdownElem.textContent = (days < 10 ? "0" + days : days) + " " + (hours < 10 ? "0" + hours : hours) + " " + (minutes < 10 ? "0" + minutes : minutes) + " " + (seconds < 10 ? "0" + seconds : seconds);
          daysElem.textContent = days < 10 ? "0" + days : days;
          hoursElem.textContent = hours < 10 ? "0" + hours : hours;
          minutesElem.textContent = minutes < 10 ? "0" + minutes : minutes;
          secondsElem.textContent = seconds < 10 ? "0" + seconds : seconds;
        }
      }, 1000);
    </script>
    <%- include('homepages/footer') %>
  </body>
</html>
